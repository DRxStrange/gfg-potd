
/*
Given a big positive number x represented as string, find value of x % 11 or x mod 11. Output is expected as an integer.

Example 1:

Input: x = 1345
Output: 3
Explanation: 1345 % 11 = 3 
Example 1:

Input: x = 231456786543567898765
Output: 1
Explanation: 231456786543567898765 % 11 = 1

Your Task:  
You don't need to read input or print anything. Your task is to complete the function xmod11() which takes string x as the input parameter and returns the integer value of x%11.

Expected Time Complexity: O(length of string x)
Expected Space Complexity: O(1)
*/
code:

class Solution
{

public:
    int xmod11(string x)
    {
       // code here
      int even =0;
      int odd = 0;
      int n = x.length();
      // sum of even places of number
      for(int i =0; i < n; i+=2){
          even= even + (x[i] - '0');
          
      }
      //sum of odd places of number
       for(int i =1; i < n; i+=2){
          odd= odd + (x[i] - '0');
          
      }
      //check remainder is negative or positive 
       int diff = (odd-even)%11;
       if negative add 11; to that remainder;
       if(diff<0){
           return diff+11;
       }
       //if positive simply return
      return diff;
      
    }
};
